/**
 * Automatically generated by Zserio Java extension version 2.2.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package tutorial;

public class Experience implements zserio.runtime.io.InitializeOffsetsWriter, zserio.runtime.SizeOf
{
    public Experience()
    {
    }

    public Experience(java.io.File file)
            throws java.io.IOException, zserio.runtime.ZserioError
    {
        final zserio.runtime.io.FileBitStreamReader in = new zserio.runtime.io.FileBitStreamReader(file);
        read(in);
        in.close();
    }

    public Experience(zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException, zserio.runtime.ZserioError
    {
        read(in);
    }

    public Experience(
        byte yearsOfExperience_,
        tutorial.Language programmingLanguage_)
    {
        setYearsOfExperience(yearsOfExperience_);
        setProgrammingLanguage(programmingLanguage_);
    }

    @Override
    public int bitSizeOf()
    {
        return bitSizeOf(0);
    }

    @Override
    public int bitSizeOf(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 6;
        endBitPosition += getProgrammingLanguage().bitSizeOf(endBitPosition);

        return (int)(endBitPosition - bitPosition);
    }

    public byte getYearsOfExperience()
    {
        return this.yearsOfExperience_;
    }

    public void setYearsOfExperience(byte yearsOfExperience_)
    {
        this.yearsOfExperience_ = yearsOfExperience_;
    }

    public tutorial.Language getProgrammingLanguage()
    {
        return this.programmingLanguage_;
    }

    public void setProgrammingLanguage(tutorial.Language programmingLanguage_)
    {
        this.programmingLanguage_ = programmingLanguage_;
    }

    @Override
    public boolean equals(java.lang.Object obj)
    {
        if (obj instanceof Experience)
        {
            final Experience that = (Experience)obj;

            return
                    this.yearsOfExperience_ == that.yearsOfExperience_ &&
                    ((this.programmingLanguage_ == null) ? that.programmingLanguage_ == null : this.programmingLanguage_.getValue() == that.programmingLanguage_.getValue());
        }

        return false;
    }

    @Override
    public int hashCode()
    {
        int result = zserio.runtime.Util.HASH_SEED;

        result = zserio.runtime.Util.HASH_PRIME_NUMBER * result + this.yearsOfExperience_;
        result = zserio.runtime.Util.HASH_PRIME_NUMBER * result +
                ((this.programmingLanguage_ == null) ? 0 : this.programmingLanguage_.hashCode());

        return result;
    }

    public void read(final zserio.runtime.io.BitStreamReader in)
            throws java.io.IOException, zserio.runtime.ZserioError
    {
        this.yearsOfExperience_ = (byte)in.readBits(6);

        this.programmingLanguage_ = tutorial.Language.readEnum(in);
    }

    public long initializeOffsets(long bitPosition)
    {
        long endBitPosition = bitPosition;

        endBitPosition += 6;
        endBitPosition += getProgrammingLanguage().bitSizeOf(endBitPosition);

        return endBitPosition;
    }

    public void write(java.io.File file) throws java.io.IOException, zserio.runtime.ZserioError
    {
        zserio.runtime.io.FileBitStreamWriter out = new zserio.runtime.io.FileBitStreamWriter(file);
        write(out);
        out.close();
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out)
            throws java.io.IOException, zserio.runtime.ZserioError
    {
        write(out, true);
    }

    @Override
    public void write(zserio.runtime.io.BitStreamWriter out, boolean callInitializeOffsets)
            throws java.io.IOException, zserio.runtime.ZserioError
    {
        out.writeBits(getYearsOfExperience(), 6);

        getProgrammingLanguage().write(out, false);
    }

    private byte yearsOfExperience_;
    private tutorial.Language programmingLanguage_;
}
